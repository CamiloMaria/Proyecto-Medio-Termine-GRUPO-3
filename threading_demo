import threading
import concurrent.futures
import time
import _thread

start = time.perf_counter()


def do_something(seconds):
    print(f'Sleeping {seconds} second(s)...')
    time.sleep(seconds)
    return  'Done Sleeping...{seconds}'



with concurrent.futures.ThreadPoolExecutor() as executor:
    secs = [5, 4, 3, 2, 1]
    results = [executor.map(do_something, secs)]

for f in concurrent.futures.as_completed(results):# type: ignore
     print(f.result)